#!/bin/sh
#echo "run $@" 1>&2
#set -x
# $1 command
# $2 rulename
# $3 protocol
# $4 address
# $5 mask
# $6 port
# $7 id

pf=

piped() {
	local PIPES
	local port
	local status
	local pipeno
	local data

	PIPES=`sysrc -i -n -s blacklistd blacklistd_pipes`
	data=`echo $PIPES | egrep -o "^all:[[:digit:]]*\$"`
	status=$?
	if [ "$status" = "0" ]; then
		pipeno=`echo $data | cut -f 2 -d ':'`
		echo "$pipeno"
		return
	fi
	port=$1
	for pipe in $PIPES; do
		data=`echo $pipe | egrep -o "^${port}:[[:digit:]]*\$"`
		status=$?
		if [ "${status}" = "0" ]; then
			pipeno=`echo $data | cut -f 2 -d ':'`
			echo "$pipeno"
			return
		fi
	done
	echo "no"
}

probability() {
	local PIPES
	local port
	local status
	local prob
	local data

	PIPES=`sysrc -i -n -s blacklistd blacklistd_pipes`
	data=`echo $PIPES | egrep -o "^all:[[:digit:]]*\$"`
	status=$?
	if [ "$status" = "0" ]; then
		prob=`echo $data | cut -f 3 -d ':'`
		echo "$prob"
		return
	fi
	port=$1
	for pipe in $PIPES; do
		data=`echo $pipe | egrep -o "^${port}:[[:digit:]]*\$"`
		status=$?
		if [ "${status}" = "0" ]; then
			prob=`echo $data | cut -f 3 -d ':'`
			echo "$prob"
			return
		fi
	done
}

if [ -f "/etc/ipfw-blacklist.rc" ]; then
	pf="ipfw"
	. /etc/ipfw-blacklist.rc
	ipfw_offset=${ipfw_offset:-2000}
fi

if [ -z "$pf" ]; then
	for f in npf pf ipf; do
		if [ -f "/etc/$f.conf" ]; then
			pf="$f"
			break
		fi
	done
fi

if [ -z "$pf" ]; then
	echo "$0: Unsupported packet filter" 1>&2
	exit 1
fi

if [ -n "$3" ]; then
	proto="proto $3"
fi

if [ -n "$6" ]; then
	port="port $6"
fi

addr="$4"
mask="$5"
case "$4" in
::ffff:*.*.*.*)
	if [ "$5" = 128 ]; then
		mask=32
		addr=${4#::ffff:}
	fi;;
esac

case "$1" in
add)
	local mypipe
	local prob

	mypipe=`piped $6`
	if [ "$mypipe" != "no" ]; then
		prob=`probability $6`
	case "$pf" in
	ipf)
		/sbin/ipfstat -io | /sbin/ipf -I -f - >/dev/null 2>&1
		echo block in quick $proto from $addr/$mask to \
		    any port=$6 head port$6 | \
		    /sbin/ipf -I -f - -s >/dev/null 2>&1 && echo OK
		;;
	ipfw)
		# use $ipfw_offset+$port for rule number
		rule=$(($ipfw_offset + $6))
		tname="port$6"
		/sbin/ipfw table $tname create type addr 2>/dev/null
		/sbin/ipfw -q table $tname add "$addr/$mask"
		# if rule number $rule does not already exist, create it
		if [ "$mypipe" = "no" ]; then
			/sbin/ipfw show $rule >/dev/null 2>&1 || \
				/sbin/ipfw add $rule drop $3 from \
				table"("$tname")" to any dst-port $6 >/dev/null && \
				echo OK
		else
			/sbin/ipfw show $rule >/dev/null 2>&1 || \
				/sbin/ipfw add $rule pipe $mypipe $3 from \
				table"("$tname")" to any dst-port $6 >/dev/null && \
				echo OK
		fi
		;;
	npf)
		/sbin/npfctl rule "$2" add block in final $proto from \
		    "$addr/$mask" to any $port
		;;
	pf)
		# if the filtering rule does not exist, create it
		if [ "$mypipe" = "no" ]; then
			/sbin/pfctl -a "$2/$6" -sr 2>/dev/null | \
			    grep -q "<blacklist>" || \
			    echo "block in quick $proto from <blacklist> to any $port" | \
			    /sbin/pfctl -a "$2/$6" -f -
		elif [ -n "$prob" ]; then
			/sbin/pfctl -a "$2/$6" -sr 2>/dev/null | \
			    grep -q "<blacklist>" || \
			    echo -e "block in quick $proto from <blacklist> to any $port probability $prob\n \
				     pass in quick $proto from <blacklist> to any $port dnpipe $mypipe" | \
			    /sbin/pfctl -a "$2/$6" -f -
		else
			/sbin/pfctl -a "$2/$6" -sr 2>/dev/null | \
			    grep -q "<blacklist>" || \
			    echo "pass in quick $proto from <blacklist> to any $port dnpipe $mypipe" | \
			    /sbin/pfctl -a "$2/$6" -f -
		fi
		# insert $ip/$mask into per-protocol/port anchored table
		/sbin/pfctl -qa "$2/$6" -t "blacklist" -T add "$addr/$mask" && \
		    /sbin/pfctl -qk "$addr" && echo OK
		;;
	esac
	;;
rem)
	case "$pf" in
	ipf)
		/sbin/ipfstat -io | /sbin/ipf -I -f - >/dev/null 2>&1
		echo block in quick $proto from $addr/$mask to \
		    any port=$6 head port$6 | \
		    /sbin/ipf -I -r -f - -s >/dev/null 2>&1 && echo OK
		;;
	ipfw)
		/sbin/ipfw table "port$6" delete "$addr/$mask" 2>/dev/null && \
		    echo OK
		;;
	npf)
		/sbin/npfctl rule "$2" rem-id "$7"
		;;
	pf)
		/sbin/pfctl -qa "$2/$6" -t "blacklist" -T delete "$addr/$mask" && \
		    echo OK
		;;
	esac
	;;
flush)
	case "$pf" in
	ipf)
		/sbin/ipf -Z -I -Fi -s > /dev/null && echo OK
		;;
	ipfw)
		/sbin/ipfw table "port$6" flush 2>/dev/null && echo OK
		;;
	npf)
		/sbin/npfctl rule "$2" flush
		;;
	pf)
		# dynamically determine which anchors exist
		for anchor in $(/sbin/pfctl -a "$2" -s Anchors); do
			/sbin/pfctl -a $anchor -t "blacklist" -T flush
			/sbin/pfctl -a $anchor -F rules
		done
		echo OK
		;;
	esac
	;;
*)
	echo "$0: Unknown command '$1'" 1>&2
	exit 1
	;;
esac
